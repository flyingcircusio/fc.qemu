# fc.qemu development

## DevHost-based individual development environments

We leverage our devhost abilities so that you can easily set up a personal
virtual development environment.

```
fc.qemu $  cd batou
fc.qemu > batou $ ./batou deploy dev
... This takes around 6-7 minutes ...
fc.qemu > batou $ ssh -F ssh_config_dev host1
host1 $ sudo -i
host1 $ run-tests
```

If your Ceph setup becomes unclean/stuck, you can reboot `host1` or run (without rebooting):

```
fc.qemu $ cleanup-ceph
```

For some cases you can also run tests without running `fc-manage` after changing the source.

```
$ sudo -i
$ cd /home/developers/fc.qemu
$ uv sync
$ uv run pytest
```

Not all tests might pass in this situation as any interaction with consul may call the wrong version of the code and doesn't interact well with old code on host1.

## Hydra integration tests

We assume that you have a local checkout on your machine for editing and that
you synchronize that code (e.g. with rsync when saving) to a remote machine,
typically our hydra server. To run the tests of your development version, you
need a (current or "suitable") checkout of the platform code as well:

    local$ ssh hydra01.fcio.net
    hydra01 ~ $ cd fc-nixos

    hydra01 ~/fc-nixos $ nix-shell
    hydra01 ~/fc-nixos $ nix-build --arg useCheckout true tests/kvm_host_ceph-nautilus.nix

To run only some tests you can pass arguments to pytest:

    hydra01 ~/fc-nixos $ nix-build --arg useCheckout true --argstr testOpts "-k test_agent_check"  tests/kvm_host_ceph-nautilus.nix

To interact with the tests using PDB you can add breakpoints and/or cause the tests to fail and then:

    hydra01 ~/fc-nixos $ nix-build tests/kvm_host_ceph-nautilus.nix -A driverInteractive && sudo ./result/bin/nixos-test-driver



## Real-world testing on FCIO DEV network

* switch a host to your fc-nixos development environment
* sync your fc.qemu code to that machine
* switch the system-installed fc.qemu package to the fc.qemu dev package referencing your code
* rebuild the system, enjoy

.. vim: set ft=rst:
